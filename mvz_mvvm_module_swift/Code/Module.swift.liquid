{% include 'header' %}

protocol {{ prefix }}{{ module_info.name }}ModuleInput: class {
}

protocol {{ prefix }}{{ module_info.name }}ModuleOutput: class {
}

final class {{ prefix }}{{ module_info.name }}Module {

    public typealias Dependencies = {{ prefix }}{{ module_info.name }}Interactor.Dependencies

    var input: {{ prefix }}{{ module_info.name }}ModuleInput {
        return viewModel
    }
    var output: {{ prefix }}{{ module_info.name }}ModuleOutput? {
        set {
            viewModel.output = newValue
        }
        get {
            return viewModel.output
        }
    }
    var view: UIViewController {
        return viewController
    }
    private let viewController: {{ prefix }}{{ module_info.name }}ViewController
    private let viewModel: {{ prefix }}{{ module_info.name }}ViewModel

    init(dependencies: Dependencies) {
        let interactor = {{ prefix }}{{ module_info.name }}Interactor(dependencies: dependencies)
        viewModel = {{ prefix }}{{ module_info.name }}ViewModel(interactor: interactor)
        viewController = {{ prefix }}{{ module_info.name }}ViewController(viewModel: viewModel)
        viewModel.delegate = viewController
    }

}
