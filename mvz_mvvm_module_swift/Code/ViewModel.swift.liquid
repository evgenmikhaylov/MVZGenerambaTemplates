{% include 'header' %}

protocol {{ prefix }}{{ module_info.name }}ViewModelDelegate: class {
    func update(animated: Bool)
}

final class {{ prefix }}{{ module_info.name }}ViewModel: {{ prefix }}{{ module_info.name }}Input {

    weak var delegate: {{ prefix }}{{ module_info.name }}ViewModelDelegate?
    weak var output: {{ prefix }}{{ module_info.name }}ViewModuleOutput?
    private let interactor: {{ prefix }}{{ module_info.name }}Interactor

	  // MARK: - Lifecycle

    init(interactor: {{ prefix }}{{ module_info.name }}Interactor) {
        self.interactor = interactor
    }

    func viewDidLoad() {
        delegate?.update(animated: false)
    }

    // MARK: - {{ prefix }}{{ module_info.name }}Input
}
